{% extends "base.njk" %}

{% block title %}Bones Boilerplate | gulp-nunjucks-sass-template{% endblock %}
{% block headEnd %}
    {{ tags.css | safe }}
{% endblock %}

{% block bodyOutside %}
<body class="page--bones">
    <div class="container">
        <div class="container__child page__content">
            {###############
              INTRODUCTION
            ###############}
            <h1 class="text-center">Bones</h1>
            <h5 class="text-center">Common CSS/SCSS shorthands.</h5>
            <p class="mt40 text-justify-intercharacter">
                Bones is a tiny customizable SCSS addon that includes very common style rules abstracted into CSS classes and SCSS mixins.
                Inspired <sup>❤️</sup> by other boilerplates like <a href="http://getskeleton.com/">Skeleton</a> and
                <a href="https://github.com/acahir/Barebones">Barebones</a> (both sadly abandoned).
            </p>
            <p>
                This is a small <i>"upgrade"</i> on top of <a href="https://purecss.io"><b>pure.css</b></a> (but is completely separate)
                with the most common style rules.
                Combining  <a href="https://necolas.github.io/normalize.css/"><code>normalize.css</code></a>,
                <a href="https://purecss.io/"><code>pure.css</code></a> and <code>Bones</code>
                serves well as a starting point for pretty much any website, basic support for mobile included.
            </p>
            <hr>

            {###############
              CSS GRID
            ###############}
            <h3>1. Grid</h3>
            <p> <code>pure.css</code> does includes <a href="https://purecss.io/grids/">two grid systems (5ths and 24ths)</a>,
                however Bones includes a few more. It uses CSS's grid system; here are six more basic grid setups:
            </p>
            <ul>
                <li><code>grid--single</code></li>
                <li><code>grid--halves</code></li>
                <li><code>grid--thirds</code></li>
                <li><code>grid--quarters</code></li>
                <li><code>grid--sixths</code></li>
            </ul>
            <p>
                Each one corresponds to a grid with that number of columns.
                By default, grid elements stretch to their entire available space. To center instead, use:
            </p>
            <ul>
                <li><code>grid__center-horizontal</code></li>
                <li><code>grid__center-vertical</code></li>
            </ul>
            <p>
                Some examples:
            </p>
            <div class="mt30 mb40 flex flex--column flex--center">
                <span id="grid-demo1" class="grid--quarters">
                    <span>First</span>
                    <span>Second</span>
                    <span>Third</span>
                    <span>Fourth</span>
                </span>
                <span class="demo-annotation">A <code>flex--quarters</code> grid.</span>
<pre>
<code class="multiline">&lt;span class="grid--quarters">
    &lt;span>First&lt;/span>
    &lt;span>Second&lt;/span>
    &lt;span>Third&lt;/span>
    &lt;span>Fourth&lt;/span>
&lt;/span>
</code>
</pre>
            </div>
            <div class="mt30 mb40 flex flex--column flex--center">
                <span id="grid-demo2" class="grid--sixths">
                    <span>First</span>
                    <span>Second</span>
                    <span class="grid__center-horizontal">Third</span>
                    <span class="grid__center-vertical">Fourth</span>
                    <span>Fifth</span>
                    <span>Sixth</span>
                </span>
                <span class="demo-annotation">A <code>flex--sixths</code> grid.</span>
<pre>
<code class="multiline">&lt;span class="grid--sixths">
    &lt;span>First&lt;/span>
    &lt;span>Second&lt;/span>
    &lt;span class="grid__center-horizontal">Third&lt;/span>
    &lt;span class="grid__center-vertical">Fourth&lt;/span>
    &lt;span>Fifth&lt;/span>
    &lt;span>Sixth&lt;/span>
&lt;/span>
</code>
</pre>
            </div>
            <hr>

            {###############
              CONTAINERS
            ###############}
            <h3>2. Containers</h3>
            <p>
                The grid system above only creates the grid and nothing more. Containers however, are meant for centering content on your site.
                The entire page you're viewing is actually a single <code>container__child</code> inside of a <code>container</code>!
            </p>
<pre>
<code class="multiline">&lt;body class="container">
    &lt;div class="container__child">
        ... your page-centered content
    &lt;/div>
&lt;/body>
</code>
</pre>
            <p>
                Containers automatically expand on smaller screens to fill more and more space. On mobile, the container
                will fill almost the entire page width.
            </p>
            <hr>

            {###############
                  FLEX
            ###############}
            <h3>3. Flex Centering</h3>
            <p>
                Flex is often useful for cases where using a grid would be overkill. Set up flex using:
            </p>
            <ul>
                <li><code>flex--row</code> (enable flex + set direction to row)</li>
                <li><code>flex--column</code> (enable flex + set direction to column)</li>
            </ul>
            <p>
                Shorthands for alignment are:
            </p>
            <ul>
                <li><code>flex--justify-start</code> (main axis: align to start)</li>
                <li><code>flex--justify-center</code> (main axis: align to center)</li>
                <li><code>flex--justify-end</code> (main axis: align to end)</li>
                <li><code>flex--align-start</code> (cross axis: align to start)</li>
                <li><code>flex--align-center</code> (cross axis: align to center)</li>
                <li><code>flex--align-end</code> (cross axis: align to end)</li>
            </ul>
            <div class="mt40 mb40 flex flex--column flex--center">
                <div id="flex-demo" class="p20 flex flex--column flex--center">
                    <span class="mb10">This is some flex-centered content.</span>
                </div>
<pre>
<code class="multiline">&lt;div class="flex flex--column flex--center">
    &lt;span>This is some flex-centered content.&lt;/span>
&lt;/div>
</code>
</pre>
            </div>
        </div>
    </div>

    <footer class="element-fullWidth text-center p20">
        <span>made with love by <a href="https://github.com/DefaultSimon">Simon Goričar</a>, Copyright &copy; 2020</span>
    </footer>

    {# This will load the sample-page.ts script, as configured in "tasks/configuration.ts". #}
    {{ tags.scripts.samplepage | safe }}
</body>
{% endblock %}
